<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="searchSystemEnvironment" value="true"/>
        <property name="placeholderPrefix" value="${system." />
    </bean>

    <bean id="wsClientImplementation" class="nl.gridshore.demo.webservice.client.WSClientImplementation">
        <property name="wsTemplate" ref="wsTemplate"/>
    </bean>

    <bean id="wsTemplate" class="org.springframework.ws.client.core.WebServiceTemplate">
        <property name="defaultUri" value="${system.endpointUrl}"/>
        <property name="marshaller" ref="marshaller"/>
        <property name="unmarshaller" ref="marshaller"/>
        <property name="interceptors">
            <list>
                <!-- Since both the Signature and the UsernameToken need the securementUsername
                 and securementPassword settings, but use it differently, we have to specify these
                 actions in separate interceptors. -->
                <bean class="org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor">
                    <property name="secureRequest" value="true"/>
                    <property name="secureResponse" value="false"/>
                    <property name="securementActions" value="Signature"/>
                    <property name="securementUsername" value="signkey" />
                    <property name="securementPassword" value="password"/>
                    <property name="securementSignatureCrypto">
                        <bean class="org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean">
                            <!-- Make sure the property below refers to the location of the trustStore.jks of this project -->
                            <property name="keyStoreLocation" value="file:${system.javax.net.ssl.trustStore}"/>
                            <property name="keyStorePassword" value="password"/>
                        </bean>
                    </property>
                </bean>

                <!-- we've signed the original by now, so we're ready to encrypt the contents.
                 Downside of this is that the signature can only be checked by recipients that can
                 decrypt the ID element. -->
                <bean class="org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor">
                    <property name="secureRequest" value="true"/>
                    <property name="secureResponse" value="false"/>
                    <property name="securementActions" value="Encrypt UsernameToken"/>
                    <property name="securementEncryptionUser" value="merchant"/>
                    <property name="securementEncryptionCrypto">
                        <bean id="crypto" class="org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean">
                            <!-- Make sure the property below refers to the location of the trustStore.jks of this project -->
                            <property name="keyStoreLocation" value="file:${system.javax.net.ssl.trustStore}"/>
                            <property name="keyStorePassword" value="password"/>
                        </bean>
                    </property>
                    <property name="securementEncryptionParts"
                              value="{Content}{http://www.gridshore.nl/schema/myservice}ID"/>
                    <property name="securementMustUnderstand" value="true"/>
                    <property name="securementUsername" value="username"/>
                    <property name="securementPassword" value="password"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="nl.gridshore.schema.myservice"/>
    </bean>

</beans>